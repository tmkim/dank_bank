from django.db import models

# Create your models here.

class Entry(models.Model):
    categories = {
        '': '',
        'R1': 'Restaurant',
        'F1': 'Food',
        'M1': 'Music',
        'T1': 'Travel',
    }

    category = models.CharField(choices=categories, default='')
    name = models.CharField(max_length=200)
    review = models.CharField(max_length=710)
    rating = models.IntegerField(default=0) # max = 100

    class Meta:
        ordering = ['name']

class Restaurant(models.Model):
    location = models.CharField(max_length=200)
    area = models.CharField(max_length=200)
    gmap = models.CharField(max_length=200)
    website = models.CharField(max_length=200)
    price = models.CharField(max_length=5)
    cuisine = models.CharField(max_length=200)

    class Meta:
        ordering = ['name']

class RestaurantFood(models.Model):
    restaurant = models.CharField(max_length=200) # change to restuarant id later to link
    price = models.DecimalField(decimal_places=2, max_digits=14)
    description = models.CharField(max_length=420)
    
    class Meta:
        ordering = ['name']

class Music(models.Model):
    urlTypes = {
        'SP': 'Spotify',
        'SC': 'SoundCloud',
        'YT': 'YouTube'
    }
    artist = models.CharField(max_length=200)
    songUrl = models.CharField(max_length=200)
    urlType = models.CharField(choices=['']) # enumerate : Spotify / Soundcloud / Youtube
    genre = models.CharField(max_length=200)
    
    class Meta:
        ordering = ['song']

class Travel(models.Model):
    location = models.CharField(max_length=200)
    area = models.CharField(max_length=200)
    website = models.CharField(max_length=200)
    
    class Meta:
        ordering = ['name']

class Tag(models.Model):
    name = models.CharField(max_length=33)
    
    class Meta:
        ordering = ['name']

class Image(models.Model):
    imgUrl = models.CharField(max_length=200)
    description = models.CharField(max_length=200)

    class Meta:
        ordering=['imgUrl']

class Tag2Entry(models.Model):
    tag_id = models.ForeignKey(Tag, on_delete=models.CASCADE)
    entry_id = models.ForeignKey(Entry, on_delete=models.CASCADE)
    class Meta:
        ordering = ['tag_id']

class Entry2Image(models.Model):
    entry_id = models.ForeignKey(on_delete=models.CASCADE)
    image_id = models.ForeignKey(Image, on_delete=models.CASCADE)
