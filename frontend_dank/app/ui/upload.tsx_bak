'use client';
import { useState } from 'react';
import axios from 'axios';

export default function ImageUploader() {
  const [files, setFiles] = useState<File[]>([]);
  const [fileData, setFileData] = useState<{ description: string }[]>([]);
  const [imageUrls, setImageUrls] = useState<string[]>([]);

  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    if (event.target.files) {
      const selectedFiles = Array.from(event.target.files);

      // Initialize description fields for new files (if you still want descriptions)
      const newFileData = selectedFiles.map(() => ({ description: '' }));

      setFiles(selectedFiles);
      setFileData(newFileData);
    }
  };

  const handleInputChange = (index: number, field: 'description', value: string) => {
    const updatedFileData = [...fileData];
    updatedFileData[index][field] = value;
    setFileData(updatedFileData);
  };

  const handleUpload = async () => {
    if (files.length === 0) {
      alert('Please select at least one file.');
      return;
    }

    const formData = new FormData();
    files.forEach((file, index) => {
      formData.append('files', file);
      formData.append(`description_${index}`, fileData[index].description);
    });

    try {
      const response = await axios.post<{ images: { url: string }[] }>(
        'http://127.0.0.1:8000/api_dank/upload/',
        formData,
        {
          headers: { 'Content-Type': 'multipart/form-data' },
        }
      );

      setImageUrls(response.data.images.map((image) => image.url));
    } catch (error) {
      console.error('Upload failed:', error);
    }
  };

  return (
    <div>
      <label htmlFor="images" className="block text-base font-medium text-gray-700 mb-2">
          Image Upload Here:
      </label>
      <input
          id="images"
          name="images"
          type="file"
          accept="image/*"  // Ensures only image files can be selected
          multiple  // Allows multiple files
          onChange={handleFileChange}
          className="block w-full rounded-md border border-gray-400 px-4 py-2 text-base text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500"
      />
      <div className="mt-4 pl-2 pr-4 h-40 block border rounded-md border-gray-400 overflow-y-auto">
        {files.map((file, index) => (
          <div key={index} className="my-2">
            <p>{file.name}</p>  {/* Display the file name */}
            <textarea
              placeholder="Description"
              value={fileData[index]?.description || ''}
              className="block w-full rounded-md border border-gray-400 px-4 py-2 text-base text-gray-700 focus:outline-none focus:ring-2 focus:ring-green-500"
              onChange={(e) => handleInputChange(index, 'description', e.target.value)}
            />
          </div>
        ))}
      </div>
      

      {/* <button onClick={handleUpload}>Upload</button> */}

      {/* {imageUrls.length > 0 && (
        <div>
          {imageUrls.map((url, index) => (
            <img key={index} src={url} alt={`Uploaded ${index}`} style={{ width: '200px', marginRight: '10px' }} />
          ))}
        </div>
      )} */}
    </div>
  );
}
